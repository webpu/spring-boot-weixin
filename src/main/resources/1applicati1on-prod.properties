server.port=8082
server.session-timeout=60
#server.context-path=
server.error.path=/error
server.tomcat.uri-encoding=UTF-8
server.tomcat.max-threads=200
 
#spring.datasource.type: com.alibaba.druid.pool.DruidDataSource  
spring.datasource.url=jdbc:mysql://192.168.1.201/test
spring.datasource.username=admin
spring.datasource.password=admin1234
spring.datasource.driverClassName=com.mysql.jdbc.Driver

spring.datasource.druid.initial-size=1
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=20
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.stat-view-servlet.allow=true  
#dataSource Pool configuration  
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5  
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000  
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000   
# 配置一个连接在池中最小生存的时间，单位是毫秒  
spring.datasource.minEvictableIdleTimeMillis=300000  
spring.datasource.validationQuery=SELECT 1 FROM DUAL  
spring.datasource.testWhileIdle=true  
spring.datasource.testOnBorrow=false  
spring.datasource.testOnReturn=false  
# 剔除“不可用连接”的机制称为ExceptionSorter，实现的原理是根据异常类型/Code/Reason/Message来识别“不可用连接”
spring.datasource.exceptionSorter=true  
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true  
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20  
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j  
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500  
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true   

 
#spring:
# mvc:
#  view:
#   prefix: /WEB-INF/views/
#   suffix: .jsp
sys.environment=PROD 

#mybatis_config_file: mybatis-config.xml
#mapper_path: /mapper/**.xml
#entity_package: com.webpu.m.entity
#generator

generator.javaModelGenerator=com.webpu.m.entity
generator.sqlMapGenerator=mappings
generator.javaClientGenerator=com.webpu.m.mapper
generator.MapperPlugin=com.webpu.m.common.generator.MyMapper
#mybatis:
#    type-aliases-package: com.webpu.m.pojo
#    mapper-locations: classpath:mapping/*.xml
    
#mappers 多个接口时减号（或逗号）隔开
#mapper:
#    mappers:
#        - com.webpu.m.common.MyMapper
#    not-empty: false
#    identity: MYSQL

#pagehelper:
#    helperDialect: mysql
#    reasonable: true
#    supportMethodsArguments: true
#    params: count=countSql
restart.include.mapper=/mapper-[\\w-\\.]+jar
restart.include.pagehelper=/pagehelper-[\\w-\\.]+jar    
#debug begin set

spring.devtools.restart.enabled=true
spring.devtools.restart.additional-paths=src/main/java
#debug end set   
#mvc begin set   

spring.mvc.static-path-pattern=/static/**
#mvc end set   
# freemarker begin set   

freemarker.template-loader-path=classpath:/templates
freemarker.cache=false
freemarker.charset=UTF-8
freemarker.check-template-location=true
freemarker.content-type=text/html
freemarker.expose-request-attributes=true
freemarker.expose-session-attributes=true
freemarker.request-context-attribute=request
freemarker.suffix=.ftl   
# freemarker end set   
# thymeleaf begin set

thymeleaf.prefix=classpath:/templates/
thymeleaf.cache=false
thymeleaf.encoding=UTF-8
thymeleaf.content-type=text/html
thymeleaf.mode=HTML5
thymeleaf.suffix=.html
# thymeleaf end set  